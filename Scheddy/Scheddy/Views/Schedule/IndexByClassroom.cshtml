@using Scheddy.Models
@model IEnumerable<Scheddy.ViewModels.ClassroomByTime>

@{
    ViewBag.Title = "Classroom by time Index";
}

<h2>Classrooms by time</h2>

<p>
    @Html.ActionLink("Create New Section", "Create", "Section", new { scheduleType = 1 }, null)
</p>
<table class="table">
   
    @{ 
        Scheddy.ViewModels.ClassroomByTime oldItem = new Scheddy.ViewModels.ClassroomByTime();
    }

@foreach (var item in Model)
{
    // Insert a row when there's space between 2 classes in the same room on the same set of days
    if (oldItem != null && oldItem.DaysTaught == item.DaysTaught && oldItem.BldgCode == item.BldgCode && oldItem.RoomNumber == item.RoomNumber)
    {
        TimeSpan differenceDuration = item.StartTime.Value.TimeOfDay - oldItem.EndTime.Value.TimeOfDay;

        //System.Diagnostics.Debug.WriteLine("item.StartTime.Value.TimeOfDay: " + item.StartTime.Value.TimeOfDay);
        //System.Diagnostics.Debug.WriteLine("oldItem.EndTime.Value.TimeOfDay: " + oldItem.EndTime.Value.TimeOfDay);
        //System.Diagnostics.Debug.WriteLine("Difference in minutes: " + differenceDuration.TotalMinutes);

        if (differenceDuration.TotalMinutes > 30)
        {
            <tr>
                <td>
                    @Html.ActionLink("Create New Section Here", "Create", "Section")
                </td>
                <td>
                </td>
                <td>
                </td>
            </tr>
        }
    }

    if (oldItem.Campus != item.Campus)
    {
        <tr>
            <th>
                <font size="8">
                    @item.Campus.ToString()
                </font>
            </th>
        </tr>
    }

    // the big header for the classroom name
    if (oldItem.RoomNumber != item.RoomNumber || oldItem.BldgCode != item.BldgCode)
    {
        <tr>
            <th>
                <font size="6">
                @item.BldgCode.ToString()
                @Html.Raw(" ")
                @item.RoomNumber.ToString()
                </font>
            </th>
        </tr>
        <tr>
            <th>
                @Html.Raw("Course")
            </th>
            <th>
                @Html.Raw("Instructor")
            </th>
            <th>
                @Html.Raw("Days Taught")
            </th>
            <th>
                @Html.Raw("Time")
            </th>
        </tr>
    }

    // diplay the actual data
    <tr>
        <td>
            @item.Prefix.ToString()
            @Html.Raw(" ")
            @item.CourseNumber.ToString()
        </td>
        <td>
            @Html.Raw(@item.LastName.ToString() + ", " + @item.FirstName.ToString())
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DaysTaught)
        </td>
        <td>
            @item.StartTime.Value.ToString("HH:mm -")
            @item.EndTime.Value.ToString("HH:mm")
        </td>
    </tr>
    
    oldItem = item;

}

</table>
<div class="col-md-offset-2 col-md-10">
    <input id="btnAddSection" type="button" value="Add Section" class="btn btn-default" onclick="location.href='@Url.Action("Create", "Section",  new { scheduleType = 1 })'"/>
</div>

