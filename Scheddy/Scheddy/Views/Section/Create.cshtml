@model Scheddy.ViewModels.ClassroomCourseInstructorList

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Section</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @{ 
            List<string> classroomNames = new List<string>();

            foreach (Scheddy.Models.Classroom c in Model.classrooms)
            {
                classroomNames.Add(c.Campus + " " + c.BldgCode + " " + c.RoomNumber);
            }

            List<string> instructorNames = new List<string>();

            foreach (Scheddy.Models.Instructor c in Model.instructors)
            {
                instructorNames.Add(c.FirstName + " " + c.LastName);
            }

            List<string> courseNames = new List<string>();

            foreach (Scheddy.Models.Course c in Model.courses)
            {
                courseNames.Add(c.Prefix + " " + c.CourseNumber);
            }

            Model.selectedInstructor = "selectedInstructor";
            Model.selectedCourse = "selectedCourse";
            Model.selectedClassroom = "selectedClassroom";
        }

        <div class="form-group">
            @Html.LabelFor(model => model.section.Instructor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList(Model.selectedInstructor,
                new SelectList(instructorNames),
                "Select Instructor", new { required = "required" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.section.Course, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList(Model.selectedCourse,
                new SelectList(courseNames),
                "Select Course", new { required = "required" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.section.Classroom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList(Model.selectedClassroom,
                new SelectList(classroomNames),
                "Select Classroom", new {required = "required"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.section.CRN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.section.CRN, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.section.CRN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.section.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.section.StartTime, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.section.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.section.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.section.EndTime, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.section.EndTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.section.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.section.StartDate, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.section.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.section.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.section.EndDate, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.section.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.section.DaysTaught, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.checkedMonday, new Dictionary<string, object> { { "id", "cbMonday" }, { "onclick", "checkDay.call(this)" } })
                @Html.Label("Monday")<br>
                @Html.CheckBoxFor(model => model.checkedTuesday, new Dictionary<string, object> { { "id", "cbTuesday" }, { "onclick", "checkDay.call(this)" } })
                @Html.Label("Tuesday")<br>
                @Html.CheckBoxFor(model => model.checkedWednesday, new Dictionary<string, object> { { "id", "cbWednesday" }, { "onclick", "checkDay.call(this)" } })
                @Html.Label("Wednesday")<br>
                @Html.CheckBoxFor(model => model.checkedThursday, new Dictionary<string, object> { { "id", "cbThursday" }, { "onclick", "checkDay.call(this)" } })
                @Html.Label("Thursday")<br>
                @Html.CheckBoxFor(model => model.checkedFriday, new Dictionary<string, object> { { "id", "cbFriday" }, { "onclick", "checkDay.call(this)" } })
                @Html.Label("Friday")<br>
                @Html.CheckBoxFor(model => model.checkedSaturday, new Dictionary<string, object> { { "id", "cbSaturday" }, { "onclick", "checkDay.call(this)" } })
                @Html.Label("Saturday")<br>
                @Html.CheckBoxFor(model => model.checkedOnline, new Dictionary<string, object> { { "id", "cbOnline" }, { "onclick", "checkOnline.call(this)" } })
                @Html.Label("Online")<br>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.section.numSeats, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.section.numSeats, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.section.numSeats, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Classroom Schedule View", "IndexByClassroom", "Schedule")<br>
    @Html.ActionLink("Back to Instructor Schedule View", "IndexByProfessor", "Schedule")
</div> 

<script>
    function checkOnline()
    {
        document.getElementById('cbMonday').checked = false;
        document.getElementById('cbTuesday').checked = false;
        document.getElementById('cbWednesday').checked = false;
        document.getElementById('cbThursday').checked = false;
        document.getElementById('cbFriday').checked = false;
        document.getElementById('cbSaturday').checked = false;
    }

    function checkDay()
    {
        if (document.getElementById('cbMonday').checked) {
            document.getElementById('cbOnline').checked = false;
        }

        if (document.getElementById('cbTuesday').checked) {
            document.getElementById('cbOnline').checked = false;
        }

        if (document.getElementById('cbWednesday').checked) {
            document.getElementById('cbOnline').checked = false;
        }

        if (document.getElementById('cbThursday').checked) {
            document.getElementById('cbOnline').checked = false;
        }

        if (document.getElementById('cbFriday').checked) {
            document.getElementById('cbOnline').checked = false;
        }

        if (document.getElementById('cbSaturday').checked) {
            document.getElementById('cbOnline').checked = false;
        }
    }
</script>