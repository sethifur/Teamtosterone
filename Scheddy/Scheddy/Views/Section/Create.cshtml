@model Scheddy.ViewModels.ClassroomCourseInstructorList

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Section</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @{ 
            List<string> classroomNames = new List<string>();

            foreach (Scheddy.Models.Classroom c in Model.classrooms)
            {
                classroomNames.Add(c.Campus + " " + c.BldgCode + " " + c.RoomNumber);
            }
        }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @{
            List<string> instructorNames = new List<string>();

            foreach (Scheddy.Models.Instructor c in Model.instructors)
            {
                instructorNames.Add(c.FirstName + " " + c.LastName);
            }
        }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @{
            List<string> courseNames = new List<string>();

            foreach (Scheddy.Models.Course c in Model.courses)
            {
                courseNames.Add(c.Prefix + " " + c.CourseNumber);
            }
        }

        @{ 
            Model.selectedInstructor = "selectedInstructor";
            Model.selectedCourse = "selectedCourse";
            Model.selectedClassroom = "selectedClassroom";
        }

        <div class="form-group">
            @Html.LabelFor(model => model.section.Instructor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList(Model.selectedInstructor,
                new SelectList(instructorNames),
                "Select Instructor")
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.section.Course, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList(Model.selectedCourse,
                new SelectList(courseNames),
                "Select Course")
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.section.Classroom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList(Model.selectedClassroom,
                new SelectList(classroomNames),
                "Select Classroom")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.section.CRN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.section.CRN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.section.CRN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.section.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.section.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.section.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.section.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.section.EndTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.section.EndTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.section.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.section.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.section.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.section.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.section.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.section.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.section.DaysTaught, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.section.DaysTaught, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.section.DaysTaught, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.section.numSeats, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.section.numSeats, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.section.numSeats, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
